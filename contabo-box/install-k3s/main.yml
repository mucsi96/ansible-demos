- name: SSH Hardening
  hosts: cluster
  vars_files:
    - vars/main.yaml
  tasks:
    - name: Get SWAP file
      become: true
      ansible.builtin.shell:
        cmd: "cat /etc/fstab | grep swap | awk '{print $1}'"
      register: swap_file
      changed_when: false
    - name: Disable SWAP
      become: true
      ansible.builtin.command:
        cmd: swapoff --all
      when: ansible_swaptotal_mb > 0
    - name: Delete SWAP file
      become: true
      ansible.builtin.file:
        path: "{{ swap_file.stdout }}"
        state: absent
    - name: Remove swapfile from /etc/fstab
      become: true
      ansible.posix.mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable incomming traffic by default
      become: true
      community.general.ufw:
        default: deny
        direction: incoming
      notify: Reload UFW
    - name: Enable outgoing traffic by default
      become: true
      community.general.ufw:
        default: allow
        direction: outgoing
      notify: Reload UFW
    - name: Enable SSH port
      become: true
      community.general.ufw:
        rule: allow
        port: "{{ ansible_port }}"
        proto: tcp
        comment: SSH
      notify: Reload UFW
    - name: Enable HTTP
      become: true
      community.general.ufw:
        rule: allow
        port: http
        proto: tcp
      notify: Reload UFW
    - name: Enable HTTPS
      become: true
      community.general.ufw:
        rule: allow
        port: https
        proto: tcp
      notify: Reload UFW
    - name: Enable Kubernetes port
      become: true
      community.general.ufw:
        rule: allow
        port: "6443"
        proto: tcp
        comment: Kubernetes
      notify: Reload UFW

    - name: Install packages that allow apt to be used over HTTPS
      become: true
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
    - name: Add an apt signing key for Docker
      become: true
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add apt repository for stable version
      become: true
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
    - name: Install docker and its dependecies
      become: true
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      notify:
        - Start Docker service
    - name: Add user to docker group
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        group: docker

    - name: Download k3s install script
      become: true
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: ~/k3s_install.sh
        mode: a+x
    - name: Execute k3s_install.sh
      become: true
      ansible.builtin.shell: ./k3s_install.sh >> ./k3s_install_log.txt
      args:
        chdir: "~"
        creates: k3s_install_log.txt
    - name: Fetch config
      become: true
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~/.kube/config
        flat: true
    - name: Fix config host
      ansible.builtin.replace:
        path: ~/.kube/config
        regexp: "127.0.0.1"
        replace: "{{ inventory_hostname }}"
      delegate_to: 127.0.0.1
    - name: Fix config
      ansible.builtin.lineinfile:
        path: ~/.kube/config
        insertafter: "server: https"
        line: "    insecure-skip-tls-verify: false"
      delegate_to: 127.0.0.1

  handlers:
    - name: Reload UFW
      become: true
      community.general.ufw:
        state: enabled
    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
